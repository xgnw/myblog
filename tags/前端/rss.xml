<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>前端 on 爸比娃娃的博客</title><link>https://blog.jiandan.cf/tags/%E5%89%8D%E7%AB%AF/</link><description>Recent content in 前端 on 爸比娃娃的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 09 Aug 2022 11:52:03 +0800</lastBuildDate><atom:link href="https://blog.jiandan.cf/tags/%E5%89%8D%E7%AB%AF/rss.xml" rel="self" type="application/rss+xml"/><item><title>自定义Ant Design样式组件样式的几种方法</title><link>https://blog.jiandan.cf/post/%E8%87%AA%E5%AE%9A%E4%B9%89ant-design%E6%A0%B7%E5%BC%8F%E7%BB%84%E4%BB%B6%E6%A0%B7%E5%BC%8F%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/</link><pubDate>Fri, 06 Aug 2021 11:52:03 +0800</pubDate><guid>https://blog.jiandan.cf/post/%E8%87%AA%E5%AE%9A%E4%B9%89ant-design%E6%A0%B7%E5%BC%8F%E7%BB%84%E4%BB%B6%E6%A0%B7%E5%BC%8F%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/</guid><description>自定义Ant Design样式组件样式的几种方法 写在前面： ​ 在了解css布局之前，我们先了解两个小概念，我认为这将对你有所帮助！ ​ 块级元素：d</description></item><item><title>11个前端工程师必备的网站</title><link>https://blog.jiandan.cf/post/frontend-devs-must-know-websites/</link><pubDate>Sat, 29 Feb 2020 11:52:03 +0800</pubDate><guid>https://blog.jiandan.cf/post/frontend-devs-must-know-websites/</guid><description>好多小伙伴有疑问，就是说有哪些值得去关注的前端网站，我知道大家可能都苦于找不到一些有价值的,还有值得信赖的网站去学一些比较货真价实的前端技术</description></item><item><title>制作一个炫酷的github个人主页</title><link>https://blog.jiandan.cf/post/%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E7%82%AB%E9%85%B7%E7%9A%84github%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5/</link><pubDate>Tue, 09 Aug 2022 11:52:03 +0800</pubDate><guid>https://blog.jiandan.cf/post/%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E7%82%AB%E9%85%B7%E7%9A%84github%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5/</guid><description>制作一个炫酷的github个人主页 0 前言 正常情况下，我们github的主页是这样的： 是不是感觉有些千篇一律呢？好，那么下面我进行这样一波操作</description></item><item><title>2020年最新前端工程师学习路线</title><link>https://blog.jiandan.cf/post/front-end-learning-path/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/front-end-learning-path/</guid><description>import useBaseUrl from &amp;lsquo;@docusaurus/useBaseUrl&amp;rsquo;; 这段日子在 B 站上收到小伙伴最多的要求就是出一个前端学习路线，我能够充分的感受到大家抓耳挠腮加挠墙的迷茫~所以在这里给大家总结了一套前</description></item><item><title>5个技巧助你成为 CSS 大神</title><link>https://blog.jiandan.cf/post/5-tips-to-master-css/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/5-tips-to-master-css/</guid><description>作为一名前端工程师，经常在写完 HTML 以后，才觉得真正的噩梦要开始了，啊，写 CSS 的时候，面对满屏乱飞的组件，真想手动给他们挪到该在位置上…… 都说 CSS 很</description></item><item><title>CSS Flexbox 布局最容易理解完全教程</title><link>https://blog.jiandan.cf/post/css-flex-box-layout/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/css-flex-box-layout/</guid><description>import useBaseUrl from &amp;ldquo;@docusaurus/useBaseUrl&amp;rdquo;; import styled from &amp;ldquo;styled-components&amp;rdquo;; 在 CSS flexbox 布局出现以前，如果要控制 HTML 元素的布局，要用到很多种奇葩的方式。在水平方向上得用float控制左右对齐，稍一不注意，就会</description></item><item><title>CSS 选择器优先级特异性权重详解</title><link>https://blog.jiandan.cf/post/css-selector-specificity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/css-selector-specificity/</guid><description>import useBaseUrl from &amp;lsquo;@docusaurus/useBaseUrl&amp;rsquo;; import styled from &amp;ldquo;styled-components&amp;rdquo;; 在写 CSS 的时候你一定遇到过有些样式明明写对了，也选择了正确的 html 元素去应用这些样式，可是就是不生效，这是为什么呢？因为在选择同一</description></item><item><title>JavaScript 游戏开发 - 物理碰撞引擎实现</title><link>https://blog.jiandan.cf/post/javascript-collision-physics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/javascript-collision-physics/</guid><description>年前我看到合成大西瓜小游戏火了，想到之前从来没有研究过游戏方面的开发，这次就想趁着这个机会看看 JavaScript 游戏开发，从原生角度上如何实现游戏里的物理特</description></item><item><title>js map函数的用法</title><link>https://blog.jiandan.cf/post/map-use/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/map-use/</guid><description>map()方法只能应用于数组遍历。如果想要遍历对象，可将对象转化为数组对象再其进行遍历。 var arr = [1,2,3,4]; //item,index,arr 分别为：当前元素的值（必填），当前元素的索</description></item><item><title>js中this指向问题及call，apply，bind的区别</title><link>https://blog.jiandan.cf/post/js%E4%B8%ADthis%E6%8C%87%E5%90%91%E9%97%AE%E9%A2%98%E5%8F%8Acallapplybind%E7%9A%84%E5%8C%BA%E5%88%AB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/js%E4%B8%ADthis%E6%8C%87%E5%90%91%E9%97%AE%E9%A2%98%E5%8F%8Acallapplybind%E7%9A%84%E5%8C%BA%E5%88%AB/</guid><description>js中this指向问题及call，apply，bind的区别 1 this指向 1.1 what is &amp;rsquo;this'? 在 ECMAScript 5 中，函数内部存在两个特殊的对象:arguments（</description></item><item><title>MacOS Monterey12.1-12.3版本连接L2TP无法正常访问公司内网非完美解决方案（详细）</title><link>https://blog.jiandan.cf/post/macos-monterey12.1-12.3%E7%89%88%E6%9C%AC%E8%BF%9E%E6%8E%A5l2tp%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E8%AE%BF%E9%97%AE%E5%85%AC%E5%8F%B8%E5%86%85%E7%BD%91%E9%9D%9E%E5%AE%8C%E7%BE%8E%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E8%AF%A6%E7%BB%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/macos-monterey12.1-12.3%E7%89%88%E6%9C%AC%E8%BF%9E%E6%8E%A5l2tp%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E8%AE%BF%E9%97%AE%E5%85%AC%E5%8F%B8%E5%86%85%E7%BD%91%E9%9D%9E%E5%AE%8C%E7%BE%8E%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E8%AF%A6%E7%BB%86/</guid><description>MacOS Monterey12.1-12.3版本连接L2TP无法正常访问公司内网非完美解决方案（详细） 背景：本人最近在用一台2021款的mac连接公</description></item><item><title>moment时间插件灵活运用+自己封装函数</title><link>https://blog.jiandan.cf/post/moment%E6%97%B6%E9%97%B4%E6%8F%92%E4%BB%B6%E7%81%B5%E6%B4%BB%E8%BF%90%E7%94%A8+%E8%87%AA%E5%B7%B1%E5%B0%81%E8%A3%85%E5%87%BD%E6%95%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/moment%E6%97%B6%E9%97%B4%E6%8F%92%E4%BB%B6%E7%81%B5%E6%B4%BB%E8%BF%90%E7%94%A8+%E8%87%AA%E5%B7%B1%E5%B0%81%E8%A3%85%E5%87%BD%E6%95%B0/</guid><description>结合moment时间插件自己封装一个获取【上周、上月、上季度、上年】时间段函数 这是我参与8月更文挑战的第7天，活动详情查看： 8月更文挑战 写在</description></item><item><title>React Props 教程 - 制作一个按钮</title><link>https://blog.jiandan.cf/post/learn-react-props-buttons/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/learn-react-props-buttons/</guid><description>import useBaseUrl from &amp;lsquo;@docusaurus/useBaseUrl&amp;rsquo;; 你在写 HTML 页面的时候肯定知道，html 标签的属性都是固定的，比如 a 标签的 href, input 里边的 type 属性。这些属性都是内置的，不方便扩展和复用。而用 React</description></item><item><title>react高阶组件概念与简单使用</title><link>https://blog.jiandan.cf/post/react%E9%AB%98%E9%98%B6%E7%BB%84%E4%BB%B6%E6%A6%82%E5%BF%B5%E4%B8%8E%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/react%E9%AB%98%E9%98%B6%E7%BB%84%E4%BB%B6%E6%A6%82%E5%BF%B5%E4%B8%8E%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</guid><description>我的博客即将同步至腾讯云开发者社区，邀请大家一同入驻：https://cloud.tencent.com/developer/support</description></item><item><title>react生命周期详解</title><link>https://blog.jiandan.cf/post/react%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E8%AF%A6%E8%A7%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/react%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E8%AF%A6%E8%A7%A3/</guid><description>react生命周期详解 写在前面： ​ 在了解css布局之前，我们先了解两个小概念，我认为这将对你有所帮助！ ​ 块级元素：display:bloak</description></item><item><title>react生命周期总结（旧、新生命周期及Hook）</title><link>https://blog.jiandan.cf/post/react%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%80%BB%E7%BB%93%E6%97%A7%E6%96%B0%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%8F%8Ahook/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/react%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%80%BB%E7%BB%93%E6%97%A7%E6%96%B0%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%8F%8Ahook/</guid><description>react生命周期总结（旧、新生命周期及Hook） 1 理解生命周期 什么是react生命周期呢？当我们使用各种框架开发程序时，当这个框架启动、程</description></item><item><title>react子父组件互相通信传值</title><link>https://blog.jiandan.cf/post/react%E5%AD%90%E7%88%B6%E7%BB%84%E4%BB%B6%E4%BA%92%E7%9B%B8%E9%80%9A%E4%BF%A1%E4%BC%A0%E5%80%BC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/react%E5%AD%90%E7%88%B6%E7%BB%84%E4%BB%B6%E4%BA%92%E7%9B%B8%E9%80%9A%E4%BF%A1%E4%BC%A0%E5%80%BC/</guid><description>react子父组件互相通信传值 写在前面： 本文作为本人学习总结之用，同时分享给大家~ 个人前端博客网站： https://zhangqiang.hk.cn 欢迎加入博主的前端学习qq交流群：： 706947563</description></item><item><title>vscode+react环境部署，运行第一个react框架</title><link>https://blog.jiandan.cf/post/react-use/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/react-use/</guid><description>前言 react官网 https://react.docschina.org/docs/getting-started.html 运行结果图： 一、安装vscode 见链接： https://www.cnblogs.com/csji/p/13558221.html 。 二、安装node、npm、yarn（采用淘宝镜像） 1.安装node 见链接： https://blog.csdn.net/bbj12345678/article/details/106741758</description></item><item><title>Web 性能优化：使用 CSS font-display 控制字体加载和替换</title><link>https://blog.jiandan.cf/post/css-font-display-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/css-font-display-intro/</guid><description>在编写网站的时候，或多或少都会用到一些网络上的字体，CSS 3 中虽然加入了对 Web Fonts（网络字体）的支持，但是浏览器对它们的加载和默认处理方</description></item><item><title>Web性能优化：使用图片懒加载推迟屏幕外图片的加载</title><link>https://blog.jiandan.cf/post/web-performance-optimization-image-lazy-loading/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/web-performance-optimization-image-lazy-loading/</guid><description>在使用 chrome 的 lighthouse 对网站进行测速之后，发现有一条优化提示：推迟屏幕外的图片加载。之前有看到过要实现这样的效果需要使用 lazy loading，图片懒加载，</description></item><item><title>web自适应你真的了解吗，写一个得心应手的响应式页面</title><link>https://blog.jiandan.cf/post/web%E8%87%AA%E9%80%82%E5%BA%94%E4%BD%A0%E7%9C%9F%E7%9A%84%E4%BA%86%E8%A7%A3%E5%90%97%E5%86%99%E4%B8%80%E4%B8%AA%E5%BE%97%E5%BF%83%E5%BA%94%E6%89%8B%E7%9A%84%E5%93%8D%E5%BA%94%E5%BC%8F%E9%A1%B5%E9%9D%A2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/web%E8%87%AA%E9%80%82%E5%BA%94%E4%BD%A0%E7%9C%9F%E7%9A%84%E4%BA%86%E8%A7%A3%E5%90%97%E5%86%99%E4%B8%80%E4%B8%AA%E5%BE%97%E5%BF%83%E5%BA%94%E6%89%8B%E7%9A%84%E5%93%8D%E5%BA%94%E5%BC%8F%E9%A1%B5%E9%9D%A2/</guid><description>web自适应你真的了解吗，写一个得心应手的响应式页面 写在前面： ​ 在了解css布局之前，我们先了解两个小概念，我认为这将对你有所帮助！ ​ 块级元</description></item><item><title>程序员如何提升英语水平</title><link>https://blog.jiandan.cf/post/learning-english-for-coders/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/learning-english-for-coders/</guid><description>import useBaseUrl from &amp;lsquo;@docusaurus/useBaseUrl&amp;rsquo;; 本篇文章适合所有想提升英语尤其是阅读能力的人，因为我自己程序员，所以我来拿自己的亲身经历来帮助大家发现自己提高英语技能的方法。 一点历</description></item><item><title>从 0 仿微信 8.0 动态表情实现过程</title><link>https://blog.jiandan.cf/post/wechat-stickers-effect/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/wechat-stickers-effect/</guid><description>微信 8.0 更新的一大特色就是支持动画表情，如果发送的消息只有一个内置的表情图标，这个表情会有一段简单的动画，一些特殊的表情还有全屏特效，例如烟花</description></item><item><title>给前端工程师看的后端科普</title><link>https://blog.jiandan.cf/post/backend-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/backend-intro/</guid><description>import useBaseUrl from &amp;lsquo;@docusaurus/useBaseUrl&amp;rsquo;; 前端工程师了解后端的功能和作用之后，能更好的和后端工程师进行沟通，减少沟通成本，另外也有助于向全栈工程师方向发展。在开始之前，先回顾</description></item><item><title>鸿蒙 OS：使用 JavaScript 开发 Todo App UI 界面</title><link>https://blog.jiandan.cf/post/harmonyos-js-todo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/harmonyos-js-todo/</guid><description>import useBaseUrl from &amp;lsquo;@docusaurus/useBaseUrl&amp;rsquo;; 距离鸿蒙 OS 2.0 发布已经过去一些日子了，看到鸿蒙系统强大的设备共享能力，我觉得未来它一定能够成为主流的操作系统。在利用了分布式系统的优势</description></item><item><title>回炉重造，css常规布局系统整理——实战开发后复盘小结</title><link>https://blog.jiandan.cf/post/%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0css%E5%B8%B8%E8%A7%84%E5%B8%83%E5%B1%80%E7%B3%BB%E7%BB%9F%E6%95%B4%E7%90%86%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%E5%90%8E%E5%A4%8D%E7%9B%98%E5%B0%8F%E7%BB%93/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0css%E5%B8%B8%E8%A7%84%E5%B8%83%E5%B1%80%E7%B3%BB%E7%BB%9F%E6%95%B4%E7%90%86%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%E5%90%8E%E5%A4%8D%E7%9B%98%E5%B0%8F%E7%BB%93/</guid><description>回炉重造，css常规布局系统整理——实战开发后复盘小结 写在前面： ​ 在了解css布局之前，我们先了解两个小概念，我认为这将对你有所帮助！ ​ 块级</description></item><item><title>开源一个个人写的小工具，用于rap（一个接口管理平台）转ts代码格式用</title><link>https://blog.jiandan.cf/post/%E5%BC%80%E6%BA%90%E4%B8%80%E4%B8%AA%E4%B8%AA%E4%BA%BA%E5%86%99%E7%9A%84%E5%B0%8F%E5%B7%A5%E5%85%B7%E7%94%A8%E4%BA%8Erap%E4%B8%80%E4%B8%AA%E6%8E%A5%E5%8F%A3%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0%E8%BD%ACts%E4%BB%A3%E7%A0%81%E6%A0%BC%E5%BC%8F%E7%94%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/%E5%BC%80%E6%BA%90%E4%B8%80%E4%B8%AA%E4%B8%AA%E4%BA%BA%E5%86%99%E7%9A%84%E5%B0%8F%E5%B7%A5%E5%85%B7%E7%94%A8%E4%BA%8Erap%E4%B8%80%E4%B8%AA%E6%8E%A5%E5%8F%A3%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0%E8%BD%ACts%E4%BB%A3%E7%A0%81%E6%A0%BC%E5%BC%8F%E7%94%A8/</guid><description>开源一个个人写的小工具，用于rap（一个接口管理平台）转ts代码格式用 最近在写 ts 相关的前端项目时，总是要给类型加限定，比如let go:str</description></item><item><title>噢！原来这就是 TypeScript</title><link>https://blog.jiandan.cf/post/typescript-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/typescript-intro/</guid><description>import useBaseUrl from &amp;lsquo;@docusaurus/useBaseUrl&amp;rsquo;; 我第一次使用 TypeScript 是 16 年在读研的时候，学校的算法课是使用 TypeScript 实现的。当时只知道 TypeScript 是 Angular 开发的必备语言，没想到还能这么通用。后来在写作业的时候</description></item><item><title>前端工程师到底要学到什么程序才能去找工作？成功面试的必备要素与回答技巧</title><link>https://blog.jiandan.cf/post/frontend-looking-for-jobs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/frontend-looking-for-jobs/</guid><description>好多人都想知道，前端工程师到底要需要掌握什么技能、到什么程度，才能去找工作？最简单的答案： 把 html、css、 js 基础学扎实，再掌握 vue 或 react 前端</description></item><item><title>前后端通信之 HTTP 协议简介</title><link>https://blog.jiandan.cf/post/http-protocol/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/http-protocol/</guid><description>import useBaseUrl from &amp;ldquo;@docusaurus/useBaseUrl&amp;rdquo;; 前后端数据的交换一般是基于 HTTP 协议。HTTP 协议包括客户端和服务端两个实体，客户端发送请求给服务端，服务端返回响应给客户端。在 HTTP 中，数</description></item><item><title>浅谈与使用js中的原型</title><link>https://blog.jiandan.cf/post/%E6%B5%85%E8%B0%88%E4%B8%8E%E4%BD%BF%E7%94%A8js%E4%B8%AD%E7%9A%84%E5%8E%9F%E5%9E%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/%E6%B5%85%E8%B0%88%E4%B8%8E%E4%BD%BF%E7%94%A8js%E4%B8%AD%E7%9A%84%E5%8E%9F%E5%9E%8B/</guid><description>浅谈与使用js中的原型 1 什么是原型 “ 每个函数都会创建一个 prototype 属性，这个属性是一个对象，包含应该由特定引用类型的实例 共享的属性和方法。实际上，这</description></item><item><title>什么是 React？你为什么应该学React？</title><link>https://blog.jiandan.cf/post/react-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/react-intro/</guid><description>import useBaseUrl from &amp;lsquo;@docusaurus/useBaseUrl&amp;rsquo;; Hello! 今天来带你走进 React 的大门！我第一次听说 React 是我在美国读研的时候，室友选了 web programming 这节课，然后遇到了关于 react 的好多问题，就是总也配置不好。我看</description></item><item><title>实现前端网页 WebRTC 视频通话以及换脸特效</title><link>https://blog.jiandan.cf/post/webrtc-avatarify-face-swap-tutorial/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/webrtc-avatarify-face-swap-tutorial/</guid><description>因为疫情的原因，线上视频会议软件异军突起，成为了在家办公的主要沟通渠道。而最近抖音上“蚂蚁呀嘿”恶搞换脸的小视频也突然火了起来，那我就想了想</description></item><item><title>使用 Docusaurus 搭建个人博客教程（二）</title><link>https://blog.jiandan.cf/post/deploy-a-docusaurus-site-part2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/deploy-a-docusaurus-site-part2/</guid><description>import useBaseUrl from &amp;lsquo;@docusaurus/useBaseUrl&amp;rsquo;; 如果你看了上期视频的话，那么你应该学会了怎么在本地搭建一个 docusaurus 博客，但是你不能只在本地来看这个博客吧，得让全世界来欣赏你的杰作，所以说</description></item><item><title>使用 Docusaurus 搭建个人博客教程（一）</title><link>https://blog.jiandan.cf/post/deploy-a-docusaurus-site/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/deploy-a-docusaurus-site/</guid><description>import useBaseUrl from &amp;lsquo;@docusaurus/useBaseUrl&amp;rsquo;; 我以前总也找不到一个满意的博客系统，wordpress 这个程序又大，然后配置也不方便。占用的服务器的资源也多。我就想有没有一个又简单</description></item><item><title>使用react+docusaurus快速搭建一个博客网站</title><link>https://blog.jiandan.cf/post/%E4%BD%BF%E7%94%A8react+docusaurus%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/%E4%BD%BF%E7%94%A8react+docusaurus%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/</guid><description>快速搭建一个react个人静态博客网站，并使用vercel免费部署发布到线上 首先看下成果图： 本篇你将您学到： 1 如何快速搭建一个自己的博客网站</description></item><item><title>一个初级前端的对象常用方法小结</title><link>https://blog.jiandan.cf/post/%E4%B8%80%E4%B8%AA%E5%88%9D%E7%BA%A7%E5%89%8D%E7%AB%AF%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E5%B0%8F%E7%BB%93/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/%E4%B8%80%E4%B8%AA%E5%88%9D%E7%BA%A7%E5%89%8D%E7%AB%AF%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E5%B0%8F%E7%BB%93/</guid><description>工作7个月的前端与【对象】的情缘及小结 写在前面： 本文作为本人学习总结之用，同时分享给大家~ 个人前端博客网站： https://zhangqiang.hk.cn 欢迎加入博主的前端学习qq交流</description></item><item><title>一个初级前端结合css、div谈一谈屏幕尺寸、分辨率、缩放概念</title><link>https://blog.jiandan.cf/post/%E4%B8%80%E4%B8%AA%E5%88%9D%E7%BA%A7%E5%89%8D%E7%AB%AF%E7%BB%93%E5%90%88cssdiv%E8%B0%88%E4%B8%80%E8%B0%88%E5%B1%8F%E5%B9%95%E5%B0%BA%E5%AF%B8%E5%88%86%E8%BE%A8%E7%8E%87%E7%BC%A9%E6%94%BE%E6%A6%82%E5%BF%B5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/%E4%B8%80%E4%B8%AA%E5%88%9D%E7%BA%A7%E5%89%8D%E7%AB%AF%E7%BB%93%E5%90%88cssdiv%E8%B0%88%E4%B8%80%E8%B0%88%E5%B1%8F%E5%B9%95%E5%B0%BA%E5%AF%B8%E5%88%86%E8%BE%A8%E7%8E%87%E7%BC%A9%E6%94%BE%E6%A6%82%E5%BF%B5/</guid><description>写在前面： 本文作为本人学习总结之用，同时分享给大家~ 个人前端博客网站： https://zhangqiang.hk.cn 欢迎加入博主的前端学习qq交流群：： 706947563 ，专注前端开发，共同学习进步！</description></item><item><title>整理了5个JavaScript怪异行为及其原因</title><link>https://blog.jiandan.cf/post/5-javascript-tricky-problems/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/5-javascript-tricky-problems/</guid><description>如果你用 JavaScript 写过项目或者参加过面试，那一定遇到过不少令人匪夷所思的问题。JavaScript 早期的规范不统一，也没有严格的标准，再加上它的语法</description></item><item><title>职业规划：程序员的 T 字形发展攻略</title><link>https://blog.jiandan.cf/post/programmer-t-type-career/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jiandan.cf/post/programmer-t-type-career/</guid><description>你是不是在面对市面上众多的技术的时候，不知道选择哪个才能对自己的职业和未来发展有所帮助？有这样的想法是正常的，因为随着科学的发展，现在的编程</description></item></channel></rss>